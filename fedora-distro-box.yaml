- name: Distrobox Fedora
  hosts: localhost
  connection: local
  vars:
    base_box_homedir: "{{ home }}/distrobox"
    box_homedir: "{{ home }}/distrobox/fedora"
    fedora_box_name: distrobox-fedora

  environment:
    DBX_CONTAINER_MANAGER: "docker"

  tasks:
  - name: Install the latest version of Distrobox
    ansible.builtin.package:
      name: distrobox
      state: latest
    become: true

  - name: pip -install docker
    ansible.builtin.pip:
      name: docker
      state: latest

  - name: Create box_homedir directory
    ansible.builtin.file:
      path: "{{ box_homedir }}"
      state: directory

  - name: Create latest distrobox-fedora
    ansible.builtin.shell: distrobox-create --yes --image fedora:36 --name "{{ fedora_box_name }}" --home "{{ box_homedir }}"

  - name: Initialize distrobox-fedora
    ansible.builtin.shell: distrobox-enter "{{ fedora_box_name }}" -- echo 'Done'

  - name: Set box base_box_homedir dir permissions
    ansible.builtin.shell: sudo chown -R "{{ user }}":"{{ user }}" "{{ base_box_homedir }}"

  - name: dnf - enable ocm-cli copr
    community.docker.docker_container_exec:
      container: "{{ fedora_box_name }}"
      command: dnf -y copr enable ocm/tools

  - name: dnf - install python3-pip
    community.docker.docker_container_exec:
      container: "{{ fedora_box_name }}"
      command: dnf -y install python3-pip

  - name: pip - install packages
    community.docker.docker_container_exec:
      container: "{{ fedora_box_name }}"
      command: python3 -m pip install pipenv poetry pre-commit git-review tox ipython ipdb docker

  - name: dnf - update packages
    community.docker.docker_container_exec:
      container: "{{ fedora_box_name }}"
      command: dnf -y update

  - name: dnf - install packages
    community.docker.docker_container_exec:
      container: "{{ fedora_box_name }}"
      command: dnf -y install zsh sshpass git util-linux-user wget vim neovim tmux origin-clients dnf-automatic fontconfig awscli ocm-cli

  - name: zsh - Change shell
    community.docker.docker_container_exec:
      container: "{{ fedora_box_name }}"
      command: sudo -k chsh -s /usr/bin/zsh {{ user }}

  - name: Download oh-my-zsh install script locally
    ansible.builtin.shell: wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O zsh-install.sh

  - name: oh-my-zsh - copy install script
    ansible.builtin.copy:
      src: zsh-install.sh
      dest: "{{ box_homedir }}/zsh-install.sh"

  - name: oh-my-zsh - install
    community.docker.docker_container_exec:
      container: "{{ fedora_box_name }}"
      command: sh "{{ box_homedir }}"/zsh-install.sh
      user: "{{ user }}"
    register: command_result
    # DO not fail if oh-my-zsh is installed
    failed_when: "not command_result.stdout"

  - name: oh-my-zsh - remove install script
    ansible.builtin.file:
      path: zsh-install.sh
      state: absent

  - name: oh-my-zsh - copy needed files to home directory
    ansible.builtin.copy:
      src: files/to-home-dir/
      dest: "{{ box_homedir }}/"

  - name: clone zsh plugins
    ansible.builtin.git:
      repo: "{{ item.repo}}"
      dest: "{{ box_homedir }}/.oh-my-zsh/custom/plugins/{{ item.name }}"
    loop:
    - { repo: 'https://github.com/TamCore/autoupdate-oh-my-zsh-plugins', name: 'autoupdate' }
    - { repo: 'https://github.com/chrissicool/zsh-256color', name: 'zsh-256color' }
    - { repo: 'https://github.com/zsh-users/zsh-autosuggestions', name: 'zsh-autosuggestions' }
    - { repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git', name: 'zsh-syntax-highlighting' }

  - name: clone astro-nvim
    ansible.builtin.git:
      repo: https://github.com/AstroNvim/AstroNvim
      dest: "{{ box_homedir }}/.config/nvim"

  - name: Create ~/.local/bin/ directory
    ansible.builtin.file:
      path: "{{ box_homedir }}/.local/bin/"
      state: directory

  - name: Create ~/.local/share/fonts/ directory
    ansible.builtin.file:
      path: "{{ box_homedir }}/.local/share/fonts/"
      state: directory

  - name: Download fonts for powerlevel10k
    ansible.builtin.copy:
      src: files/fonts/
      dest: "{{ box_homedir }}/.local/share/fonts/"

  - name: Apply fonts
    ansible.builtin.shell: fc-cache -v

  - name: Get kubectl laest version
    ansible.builtin.shell: curl -L -s "https://dl.k8s.io/release/stable.txt"
    register: kubectl_version_result

  - name: Download kubectl
    ansible.builtin.get_url:
      url: "https://dl.k8s.io/release/{{ kubectl_version_result.stdout }}/bin/linux/amd64/kubectl"
      dest: "{{ box_homedir }}/.local/bin/kubectl"
      mode: '+x'

  - name: bash-insulter - just for fun
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/hkbakke/bash-insulter/master/src/bash.command-not-found
      dest: "{{ box_homedir }}/.local/bin/bash.command-not-found"
      mode: "+x"

  - name: clone powerlevel10k zsh theme
    ansible.builtin.git:
      repo: https://github.com/romkatv/powerlevel10k.git
      dest: "{{ box_homedir }}/.oh-my-zsh/custom/themes/powerlevel10k"
      depth: 1

  - name: rosa - download latest tar.gz
    ansible.builtin.get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/rosa/latest/rosa-linux.tar.gz
      dest: "{{ box_homedir }}/rosa-linux.tar.gz"

  - name: Extract rosa into ~/.local/bin/
    ansible.builtin.unarchive:
      src: "{{ box_homedir }}/rosa-linux.tar.gz"
      dest: "{{ box_homedir }}/.local/bin/"
      mode: "+x"

